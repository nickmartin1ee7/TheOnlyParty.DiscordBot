// This file was auto-generated by ML.NET Model Builder. 
using System.Linq;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace MLModel1_WebApi1
{
    public partial class MLModel1
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Text.FeaturizeText(inputColumnName: @"text", outputColumnName: @"text")
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new[] { @"text" }))
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: @"target", inputColumnName: @"target"))
                                    .Append(mlContext.Transforms.NormalizeMinMax(@"Features", @"Features"))
                                    .Append(mlContext.MulticlassClassification.Trainers.OneVersusAll(binaryEstimator: mlContext.BinaryClassification.Trainers.LbfgsLogisticRegression(new LbfgsLogisticRegressionBinaryTrainer.Options() { L1Regularization = 0.1324653F, L2Regularization = 2.353089F, LabelColumnName = @"target", FeatureColumnName = @"Features" }), labelColumnName: @"target"))
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName: @"PredictedLabel", inputColumnName: @"PredictedLabel"));

            return pipeline;
        }
    }
}
